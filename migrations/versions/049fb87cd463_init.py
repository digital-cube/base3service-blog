"""init

Revision ID: 049fb87cd463
Revises: 
Create Date: 2020-11-21 21:19:28.985173

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '049fb87cd463'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('id_user', postgresql.UUID(), nullable=True),
    sa.Column('id_post', postgresql.UUID(), nullable=True),
    sa.Column('format', sa.String(length=8), nullable=True),
    sa.Column('filename', sa.String(length=128), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('filesize', sa.Integer(), nullable=True),
    sa.Column('hash', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_photos_created'), 'photos', ['created'], unique=False)
    op.create_index(op.f('ix_photos_id_post'), 'photos', ['id_post'], unique=False)
    op.create_index(op.f('ix_photos_id_user'), 'photos', ['id_user'], unique=False)
    op.create_table('posts',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('id_user', postgresql.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('subtitle', sa.String(), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_created'), 'posts', ['created'], unique=False)
    op.create_index(op.f('ix_posts_id_user'), 'posts', ['id_user'], unique=False)
    op.create_table('tags',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tags_created'), 'tags', ['created'], unique=False)
    op.create_table('post2tag',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('id_tag', postgresql.UUID(), nullable=False),
    sa.Column('id_post', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id_post'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id', 'id_tag', 'id_post')
    )
    op.create_index(op.f('ix_post2tag_created'), 'post2tag', ['created'], unique=False)
    op.create_index(op.f('ix_post2tag_id_post'), 'post2tag', ['id_post'], unique=False)
    op.create_index(op.f('ix_post2tag_id_tag'), 'post2tag', ['id_tag'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_post2tag_id_tag'), table_name='post2tag')
    op.drop_index(op.f('ix_post2tag_id_post'), table_name='post2tag')
    op.drop_index(op.f('ix_post2tag_created'), table_name='post2tag')
    op.drop_table('post2tag')
    op.drop_index(op.f('ix_tags_created'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_posts_id_user'), table_name='posts')
    op.drop_index(op.f('ix_posts_created'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_photos_id_user'), table_name='photos')
    op.drop_index(op.f('ix_photos_id_post'), table_name='photos')
    op.drop_index(op.f('ix_photos_created'), table_name='photos')
    op.drop_table('photos')
    # ### end Alembic commands ###
